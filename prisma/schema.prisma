// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  password       String
  user_photo     String
  user_flag      String
  case_ticket    Int       @default(0)
  betting_points Int       @default(0)
  messageId      Message[]
  Team           Team?     @relation(fields: [teamId], references: [id])
  teamId         Int?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Match          Match?    @relation(fields: [matchId], references: [id])
  matchId        Int?
  Bet            Bet[]
  Stats          Stats?    @relation(fields: [statsId], references: [id])
  statsId        Int?
  badge          Badge[]
}

model Message {
  id        Int      @id @default(autoincrement())
  message   String
  sender    Player   @relation(fields: [playerId], references: [id])
  playerId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id          Int      @id @default(autoincrement())
  team_name   String
  team_logo   String
  team_points Int
  players     Player[]
  Match       Match[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Bet         Bet[]
}

model Badge {
  id          Int      @id @default(autoincrement())
  badge_name  String
  badge_color String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Player      Player[]
}

model Stats {
  id             Int      @id @default(autoincrement())
  Player         Player[]
  orc_stats      Int[]    @default([0, 0])
  human_stats    Int[]    @default([0, 0])
  nightelf_stats Int[]    @default([0, 0])
  undead_stats   Int[]    @default([0, 0])
  tour_stats     Int[]    @default([0, 0])
  ffa_wins       Int[]    @default([0, 0])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Match {
  id             Int      @id @default(autoincrement())
  teams          Team[]
  scores         Int[]
  exchange_rates Float[]
  rounds_to_play Int
  createdAt      DateTime @default(now())
  playedAt       DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Player         Player[]
  Bet            Bet[]
}

model Bet {
  id         Int      @id @default(autoincrement())
  better     Player   @relation(fields: [playerId], references: [id])
  bettedOn   Match    @relation(fields: [matchId], references: [id])
  bettedTeam Team     @relation(fields: [teamId], references: [id])
  betAmount  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  playerId   Int
  matchId    Int
  teamId     Int
}
